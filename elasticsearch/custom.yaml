clusterName: "developersitalia"

esConfig:
  elasticsearch.yml: |
    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.verification_mode: certificate
    xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/certs/tls.key
    xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/certs/tls.crt
    xpack.security.authc:
      anonymous:
        username: anonymous_user
        roles: readonly
        authz_exception: true
    xpack.monitoring.enabled: true
    xpack.watcher.enabled: false
    xpack.ml.enabled: false
    http.cors.enabled: true
    http.cors.allow-origin: "*"
    http.cors.allow-methods: OPTIONS, HEAD, GET, POST, PUT, DELETE
    http.cors.allow-headers: X-Requested-With,X-Auth-Token,Content-Type,Content-Length
    logger.level: info
  roles.yml: |
    readonly:
      run_as: [ 'elastic' ]
      cluster: [ 'monitor' ]
      indices:
        - names: [ 'indicepa_pec', 'jekyll*', 'publiccodes', 'administrations' ]
          privileges: [ 'read' ]
  log4j2.properties: |
    status = error
    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] [%node_name]%marker %m%n
    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console

# Disable message lookup substitutions (CVE-2021-44228)
esJavaOpts: "-Dlog4j2.formatMsgNoLookups=true"

antiAffinity: soft

volumeClaimTemplate:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-premium-custom
  resources:
    requests:
      storage: 30Gi

extraEnvs:
  - name: ELASTIC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: elasticsearch-password
        key: password

extraVolumes:
  - name: secrets-store
    csi:
      driver: secrets-store.csi.k8s.io
      readOnly: true
      volumeAttributes:
        secretProviderClass: elasticsearch

extraVolumeMounts:
  - mountPath: /usr/share/elasticsearch/config/certs
    name: secrets-store

ingress:
  enabled: "true"
  annotations:
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/acme-challenge-type: http01
  className: "nginx"
  hosts:
    - elasticsearch.developers.italia.it
  path: /
  tls:
    - hosts:
        - elasticsearch.developers.italia.it
      secretName: elasticsearch-prod-tls
