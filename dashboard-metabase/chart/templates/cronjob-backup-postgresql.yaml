---

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ template "dashboard.fullname" . }}-backup-postgresql
spec:
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1

  schedule: "{{ .Values.dashboard.backups.postgresql_schedule }}"

  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: "{{ template "dashboard.fullname" . }}"
        spec:
          restartPolicy: Never

          containers:
          - name: {{ template "dashboard.fullname" . }}
            image: "{{ .Values.global.registry }}{{ .Values.dashboard.images.dashboard_backup_postgresql.repository }}:{{ tpl .Values.dashboard.images.dashboard_backup_postgresql.tag . }}"
            imagePullPolicy: {{ .Values.dashboard.images.dashboard_backup_postgresql.pullPolicy }}

            command:
            - /bin/sh
            args:
            - -c
            - |
              # Create dir if does not exist
              mkdir -p /tmp/backups/postgresql/daily_backups && \
              # Backup
              pg_dump --compress --no-password > /tmp/backups/postgresql/daily_backups/$(date +%Y-%m-%d_%Hh%Mm).gz && \
              # Delete files older than retantion desired
              cd /tmp/backups/postgresql/daily_backups && \
              ls -tp | grep -v '/$' | tail -n +$(( ${DAILY_BACKUP_RETENTION} + 1 )) | xargs -I {} rm -- {}

            env:
            - name: DAILY_BACKUP_RETENTION
              value: "{{ .Values.dashboard.backups.daily_backup_retention }}"
            - name: PGHOST
              value: "dashboard-metabase-postgresql"
            - name: PGDATABASE
              value: "{{ .Values.postgresql.global.postgresql.postgresqlDatabase }}"
            - name: PGUSER
              value: "{{ .Values.postgresql.global.postgresql.postgresqlUsername }}"
            # Secrets
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: dashboard-metabase-secrets
                  key: postgresql-password

            volumeMounts:
            - name: backups
              mountPath: /tmp/backups
              readOnly: false

            resources:
{{ toYaml .Values.dashboard.resources.dashboard_backup_postgresql | indent 14 }}

          volumes:
            - name: backups
              persistentVolumeClaim:
                claimName: dashboard-metabase-backup
